import { HfInference } from '@huggingface/inference';
import { getImageAsBlob } from '../utilities/image.js';

const aiLabels = [
  'AI generated'
];

const realLabels = [
  'Real art (not generated by AI)',
  'Real picture (not generated by AI)'
];

/**
 * @type {HfInference}
 */
let _hfInterface;

/**
 *
 * @param {string} url
 */
export async function checkIfAI(url) {
  // Initialize an interface to HuggingFace if one doesn't already exist
  _hfInterface ||= new HfInference(process.env.hfKey);

  // Check several AI related classifications
  const classifications = await _hfInterface.zeroShotImageClassification({
    model: 'openai/clip-vit-large-patch14',
    inputs: {
      image: await getImageAsBlob(url),
    },
    parameters: {
      candidate_labels: [
        ...realLabels,
        ...aiLabels
      ],
    },
  });

  // Check if the AI generated classification is above 0.5
  const aiClassifications = classifications.filter(c => aiLabels.includes(c.label));
  const aiScore = aiClassifications.reduce((acc, cur) => acc + cur.score, 0);
  return aiScore > 0.5;
}
